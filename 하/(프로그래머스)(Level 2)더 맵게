import heapq

def solution(scoville, K):
    
    if K==0:
        return 0
   
    heapq.heapify(scoville)
    l=len(scoville)
    first=heapq.heappop(scoville)
    
    #1부터 시작하는 for문, 반복 횟수가 곧 답이 된다. 
    for i in range(1,l):
        second=heapq.heappop(scoville)
        first=heapq.heappushpop(scoville,first+second*2) #first + second * 2를 heapq에 집어넣고, 가장 작은 값을 추출
        
        if first>=K: #first가 K보다 크다면, 모든 값이 K보다 크다는 의미이므로, 더 이상의 계산은 하지 않는다.
            return i
    return -1 #for문을 다 돌았음에도, first 가 K보다 여전히 작다면 -1
