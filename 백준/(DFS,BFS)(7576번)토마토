from collections import deque

dx=[-1,1,0,0]
dy=[-0,0,-1,1]
min_days=0

def bfs(q,box):
    global min_days

    while q:

        for _ in range(len(q)):

            x,y=q.popleft()

            for i in range(4):

                nx=x+dx[i]
                ny=y+dy[i]

                if 0<=nx<n and 0<=ny<m and box[nx][ny]==0:
                    box[nx][ny]=box[x][y]+1
                    min_days=box[nx][ny]
                    q.append((nx,ny))
                    
                    
m,n = map(int,input().split())
box=[]

for _ in range(n):
    box.append(list(map(int,input().split())))


q=deque()

for i in range(n):
    for j in range(m):
        if box[i][j]==1:
            q.append((i,j))
           
bfs(q,box)

for i in range(n):
    if 0 in box[i]:
        print(-1)
        exit()
        
if min_days==0:
    print(0)
else:
    print(min_days-1)
