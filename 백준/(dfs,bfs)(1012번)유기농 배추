from collections import deque


def bfs(x,y):

    q=deque()
    q.append((x,y))

    check[x][y]=1


    while q:

        x,y=q.popleft()

        for i in range(4):
            nx=x+dx[i]
            ny=y+dy[i]

            if 0<=nx<n and 0<=ny<m and check[nx][ny]==0 and graph[nx][ny]==1:
                check[nx][ny]=1
                q.append((nx,ny))


T=int(input())

for t in range(T):
    m,n,k=map(int,input().split())
    graph=[[0] * m for i in range(n)]


    for _ in range(k):
        a,b=map(int,input().split())

        graph[b][a]=1


    dx=[-1,1,0,0]
    dy=[0,0,-1,1]

    check=[[0] * m for _ in range(n)]


    cnt=0

    for i in range(n):
        for j in range(m):
            if check[i][j]==0 and graph[i][j]==1:
                bfs(i,j)
                cnt+=1

    print(cnt)
