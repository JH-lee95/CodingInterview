프로그래머스 코딩 테스트 연습

1~n 사이에 있는 소수의 개수를 구하는 문제이다.

연습문제 치곤 꽤 난이도가 있는 것 같다.


ver1. 집합활용
## 코드 시작 ##

def solution(n) :
    
    num=set(range(2,n+1))   #2부터 n까지의 숫자를 가진 num 이라는 집합을 생성한다. 
    
    for i in range(2,n+1): # 2부터 n까지 for 구문을 돌면서 
        if i in num: #i가 여전히 num 집합안에 남아있다면
            num-=set(range(i+i,n+1,i)) #i의 배수에 해당하는 숫자를 모두 제거한다.
    
    
    

    return len(num)

## 코드 종료 ##

----------------------------------------------

ver2. 에라토스테네스의 체 
## 코드 시작 ##

def solution(n) :
    
    prime=[True] * n   #일단 모든 숫자가 소수라고 가정
    
    m=int(n ** 0.5) #연산 시간을 줄이기 위해 제곱근만큼만 검사한다.
    
    for i in range(2,m+1):
        if prime[i]==True: #i가 True 라면 --> 즉 False인 경우 이미 소수가 아닌것으로 판명, 연산시간감소
            for j in range(i+i,n,i):
                prime[j]==False #i의 배수에 해당하는 숫자를 모두 False 처리
                
    return len([i for i in range(2,n) if prime[i]==True])
    
## 코드 종료 ##
