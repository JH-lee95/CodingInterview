프로그래머스 코딩테스트 연습
https://programmers.co.kr/learn/courses/18/lessons/1878


문제 설명
직사각형을 만드는 데 필요한 4개의 점 중 3개의 좌표가 주어질 때, 나머지 한 점의 좌표를 구하려고 합니다. 점 3개의 좌표가 들어있는 배열 v가 매개변수로 주어질 때, 직사각형을 만드는 데 필요한 나머지 한 점의 좌표를 return 하도록 solution 함수를 완성해주세요. 단, 직사각형의 각 변은 x축, y축에 평행하며, 반드시 직사각형을 만들 수 있는 경우만 입력으로 주어집니다.

제한사항
v는 세 점의 좌표가 들어있는 2차원 배열입니다.
v의 각 원소는 점의 좌표를 나타내며, 좌표는 [x축 좌표, y축 좌표] 순으로 주어집니다.
좌표값은 1 이상 10억 이하의 자연수입니다.
직사각형을 만드는 데 필요한 나머지 한 점의 좌표를 [x축 좌표, y축 좌표] 순으로 담아 return 해주세요.


입출력 예
v	                          result
[[1, 4], [3, 4], [3, 10]]	  [1, 10]
[[1, 1], [2, 2], [1, 2]]	  [2, 1]



코드 컨셉:
1) 총 4개의 좌표점 이므로 x,y의 개수는 각각 두개씩 있어야 합니다.
하지만 4개중 3개의 좌표만 주어지므로, x,y는 모두 각각 1개씩 부족할 것입니다.
위의 입출력 예시의 첫 번째 경우를 살펴보면, x(1:1개 , 3:2개), y(4:2개, 10:1개) 로 이루어져있습니다. 즉 x축의 1과 y축의 10이 하나씩 부족합니다.
2) 그렇다면 부족한 x,y를 이용하여 남은 점을 그리면 됩니다.

##코드 시작##
def solution(v):
    answer = []
    
    x_dict={}               #x좌표를 담기 위한 딕셔너리
    y_dict={}               #y좌표를 담기 위한 딕셔너리
    
    for i in v:                 
        if i[0] in x_dict:      #x의 원소가 이미 존재할 경우 +1, 아니면 1
            x_dict[i[0]]+=1
        else:
            x_dict[i[0]]=1
        
        if i[1] in y_dict:      #y의 원소가 이미 존재할 경우+1, 아니면 1
            y_dict[i[1]]+=1
        else:
            y_dict[i[1]]=1
            
    for k,v in x_dict.items():  #x좌표를 담아놓은 딕셔너리를 돌면서, 개수가 1인 x를 answer에 추가
        if v<2:
            answer.append(k)
    
    for k,v in y_dict.items():  #y좌표를 담아놓은 딕셔너리를 돌면서. 개수가 1인 y를 answer
        if v<2:
            answer.append(k)
        
 

    return answer
   ##코드 종료##
