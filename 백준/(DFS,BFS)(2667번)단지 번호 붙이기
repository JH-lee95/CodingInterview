n=int(input())

graph=[]

for i in range(n):
    graph.append(list(map(int,input().split())))
    
 
 
#-----------------DFS-----------------# 
cnt=0

def dfs(x,y):
    global cnt

    if x<=-1 or x>=n or y<=-1 or y>=n:
        return False

    if graph[x][y]==1:
        cnt+=1
        graph[x][y]=0

        dfs(x-1,y)
        dfs(x+1,y)
        dfs(x,y-1)
        dfs(x,y+1)

        return True
    return False
    
    
    
result=0
cnt_list=[]

for i in range(n):
    for j in range(n):
        if dfs(i,j):
            result+=1
            cnt_list.append(cnt)
            cnt=0

print(result)
print(cnt_list, end=" ")
#-----------------DFS-----------------# 



#--------------------------BFS------------------------#

from collections import deque

dx=[-1,1,0,0]
dy=[0,0,-1,1]
cnt=0

def bfs(x,y):
    global cnt

    graph[x][y]=0
    q=deque()

    q.append((x,y))

    while q:

        x,y=q.popleft()



        for i in range(4):
            nx=x+dx[i]
            ny=y+dy[i]

            if 0<=nx<n and 0<=ny<n and graph[nx][ny]==1:
                cnt+=1
                graph[nx][ny]=0
                q.append((nx,ny))
            
    return cnt
    
  
 
answer_list=[]
for i in range(n):
    for j in range(n):
        answer=bfs(i,j)

        if answer!=0:
            answer_list.append(answer)
        
        cnt=0


print(len(answer_list))
print(answer_list)



#--------------------------BFS------------------------#
